/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LEFT";
            bindings = <&kp>, <&kp>;
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <5 6 7 8 9  15 16 17 18 19  25 26 27 28 29  35 36 37>;
        };
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_RIGHT";
            bindings = <&kp>, <&kp>;
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4  10 11 12 13 14  20 21 22 23 24  30 31 32>;
        };
        td_lt: tap_dance_layer_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_LAYER_TAP";
            #binding-cells = <0>;
            tapping-term-ms = <100>;
            bindings =
                <&lt 2 SEMICOLON>,
                <&to 2>;
        };
    };

    combos {
        compatible = "zmk,combos";

        big_thumb_left {
            bindings = <&mo 4>;
            key-positions = <30 24>;
        };

        big_thumb_right {
            bindings = <&mo 4>;
            key-positions = <33 25>;
        };

        both_thumbs {
            bindings = <&caps_word>;
            key-positions = <30 33>;
        };

        big_pinky_left {
            bindings = <&mo 5>;
            key-positions = <20 10>;
        };

        big_pinky_right {
            bindings = <&mo 5>;
            key-positions = <29 19>;
        };

        top_left {
            bindings = <&caps_word>;
            key-positions = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
   &kp SINGLE_QUOTE   &kp COMMA     &kp DOT                           &kp P  &kp Y      &kp F        &kp G       &kp C       &kp R        &kp L
            &lt 2 A  &hm LALT O  &hm LGUI E                     &hm LSHFT U  &kp I      &kp D  &hm RSHFT H  &hm RGUI T  &hm RALT N      &lt 2 S
&hm LCTRL SEMICOLON       &kp Q       &kp J                           &kp K  &kp X      &kp B        &kp M       &kp W       &kp V  &hm RCTRL Z
                                      &mo 3  &hm LA(LC(LS(LEFT_GUI))) SPACE  &mo 4  &kp ENTER        &mo 3       &mo 4
            >;
        };

        qwerty {
            bindings = <
      &kp Q       &kp W       &kp E        &kp R   &kp T   &kp Y        &kp U       &kp I       &kp O                   &kp P
    &lt 2 A  &hm LALT S  &hm LCMD D  &hm LSHFT F   &kp G   &kp H  &hm RSHFT J  &hm RCMD K  &hm RALT L              &lt 2 SEMI
&hm LCTRL Z       &kp X       &kp C        &kp V   &kp B   &kp N        &kp M   &kp COMMA     &kp DOT  &hm RCTRL SINGLE_QUOTE
                              &mo 3    &kp SPACE  &trans  &trans   &kp RETURN       &mo 3
            >;
        };

        Symbols {
            bindings = <
&kp NUMBER_1               &kp NUMBER_2                &kp NUMBER_3  &kp NUMBER_4   &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
      &trans  &hm LEFT_ALT LEFT_BRACKET  &hm LEFT_GUI RIGHT_BRACKET        &trans  &kp BACKSLASH     &kp SLASH        &trans        &trans        &trans     &kp MINUS
      &trans       &kp LEFT_PARENTHESIS       &kp RIGHT_PARENTHESIS        &trans         &trans     &kp GRAVE        &trans        &trans        &trans     &kp EQUAL
                                                             &trans        &trans         &trans        &trans        &trans        &trans
            >;
        };

        Navigation {
            bindings = <
   &kp ESCAPE   &trans  &trans  &trans  &trans             &trans              &trans    &trans               &trans  &kp LA(BACKSPACE)
&kp BACKSPACE  &kp DEL  &trans  &trans  &trans    &kp K_SCROLL_UP  &kp LA(LEFT_ARROW)    &kp UP  &kp LA(RIGHT_ARROW)        &kp PAGE_UP
      &kp TAB   &trans  &trans  &trans  &trans  &kp K_SCROLL_DOWN            &kp LEFT  &kp DOWN            &kp RIGHT      &kp PAGE_DOWN
                        &trans  &trans  &trans             &trans              &trans    &trans
            >;
        };

        Mission {
            bindings = <
&kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &kp LC(NUMBER_3)  &kp LC(NUMBER_4)  &trans  &kp F1  &kp F2  &kp F3  &kp F4  &trans
      &caps_word            &trans            &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans
          &trans            &trans            &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                              &trans            &trans  &trans  &trans  &trans  &trans
            >;
        };

        Settings {
            bindings = <
&bt BT_CLR        &trans        &trans        &trans        &trans  &tog 1       &trans  &trans  &trans  &trans
    &trans        &trans        &trans        &trans        &trans  &trans       &trans  &trans  &trans  &trans
    &trans  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &trans       &trans  &trans  &trans  &trans
                                &trans   &bootloader        &trans  &trans  &bootloader  &trans
            >;
        };
    };
};
